

.. _sphx_glr_tutorials_sequential.py:



.. _sequential_tutorial:


.. currentmodule: mlens.parallel.learner

Sequential Mechanics
====================

ML-Ensemble is designed to provide an easy user interface. But it is also designed
to be extremely flexible, all the wile providing maximum concurrency at minimal
memory consumption. The lower-level API that builds the ensemble and manages the
computations is constructed in as modular a fashion as possible.

The low-level API introduces a computational graph-like environment that you can
directly exploit to gain further control over your ensemble. In fact, building
your ensemble through the low-level API is almost as straight forward as using the
high-level API. In this tutorial, we will walk through the key core :class:`Learner` class.










.. code-block:: python

    from mlens.ensemble import Sequential

**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: sequential.py <sequential.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: sequential.ipynb <sequential.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
